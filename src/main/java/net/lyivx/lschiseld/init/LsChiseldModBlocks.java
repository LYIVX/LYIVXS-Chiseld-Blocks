
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.lyivx.lschiseld.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.client.event.RegisterColorHandlersEvent;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;

import net.lyivx.lschiseld.block.WarpedStemReinforcedBlock;
import net.lyivx.lschiseld.block.WarpedStemPillarConnectingBlock;
import net.lyivx.lschiseld.block.WarpedStemPillarBlock;
import net.lyivx.lschiseld.block.WarpedStemNailedBlock;
import net.lyivx.lschiseld.block.WarpedStemBundleBlock;
import net.lyivx.lschiseld.block.SpruceLogReinforcedBlock;
import net.lyivx.lschiseld.block.SpruceLogPillarConnectingBlock;
import net.lyivx.lschiseld.block.SpruceLogPillarBlock;
import net.lyivx.lschiseld.block.SpruceLogNailedBlock;
import net.lyivx.lschiseld.block.SpruceLogBundleBlock;
import net.lyivx.lschiseld.block.SpruceLeavesSemiFrostedBlock;
import net.lyivx.lschiseld.block.SpruceLeavesPoppyBlock;
import net.lyivx.lschiseld.block.SpruceLeavesFrostedBlock;
import net.lyivx.lschiseld.block.SpruceLeavesDandilionBlock;
import net.lyivx.lschiseld.block.SpruceLeavesBlueOrchidBlock;
import net.lyivx.lschiseld.block.OakLogReinforcedBlock;
import net.lyivx.lschiseld.block.OakLogPillarConnectingBlock;
import net.lyivx.lschiseld.block.OakLogPillarBlock;
import net.lyivx.lschiseld.block.OakLogNailedBlock;
import net.lyivx.lschiseld.block.OakLogBundleBlock;
import net.lyivx.lschiseld.block.OakLeavesSemiFrostedBlock;
import net.lyivx.lschiseld.block.OakLeavesPoppyBlock;
import net.lyivx.lschiseld.block.OakLeavesFrostedBlock;
import net.lyivx.lschiseld.block.OakLeavesDandilionBlock;
import net.lyivx.lschiseld.block.OakLeavesBlueOrchidBlock;
import net.lyivx.lschiseld.block.MangroveLogReinforcedBlock;
import net.lyivx.lschiseld.block.MangroveLogPillarConnectingBlock;
import net.lyivx.lschiseld.block.MangroveLogPillarBlock;
import net.lyivx.lschiseld.block.MangroveLogNailedBlock;
import net.lyivx.lschiseld.block.MangroveLogBundleBlock;
import net.lyivx.lschiseld.block.MangroveLeavesSemiFrostedBlock;
import net.lyivx.lschiseld.block.MangroveLeavesPoppyBlock;
import net.lyivx.lschiseld.block.MangroveLeavesFrostedBlock;
import net.lyivx.lschiseld.block.MangroveLeavesDandilionBlock;
import net.lyivx.lschiseld.block.MangroveLeavesBlueOrchidBlock;
import net.lyivx.lschiseld.block.JungleLogReinforcedBlock;
import net.lyivx.lschiseld.block.JungleLogPillarConnectingBlock;
import net.lyivx.lschiseld.block.JungleLogPillarBlock;
import net.lyivx.lschiseld.block.JungleLogNailedBlock;
import net.lyivx.lschiseld.block.JungleLogBundleBlock;
import net.lyivx.lschiseld.block.JungleLeavesSemiFrostedBlock;
import net.lyivx.lschiseld.block.JungleLeavesPoppyBlock;
import net.lyivx.lschiseld.block.JungleLeavesFrostedBlock;
import net.lyivx.lschiseld.block.JungleLeavesDandilionBlock;
import net.lyivx.lschiseld.block.JungleLeavesBlueOrchidBlock;
import net.lyivx.lschiseld.block.DarkOakLogReinforcedBlock;
import net.lyivx.lschiseld.block.DarkOakLogPillarConnectingBlock;
import net.lyivx.lschiseld.block.DarkOakLogPillarBlock;
import net.lyivx.lschiseld.block.DarkOakLogNailedBlock;
import net.lyivx.lschiseld.block.DarkOakLogBundleBlock;
import net.lyivx.lschiseld.block.DarkOakLeavesSemiFrostedBlock;
import net.lyivx.lschiseld.block.DarkOakLeavesPoppyBlock;
import net.lyivx.lschiseld.block.DarkOakLeavesFrostedBlock;
import net.lyivx.lschiseld.block.DarkOakLeavesDandilionBlock;
import net.lyivx.lschiseld.block.DarkOakLeavesBlueOrchidBlock;
import net.lyivx.lschiseld.block.CrimsonStemReinforcedBlock;
import net.lyivx.lschiseld.block.CrimsonStemPillarConnectingBlock;
import net.lyivx.lschiseld.block.CrimsonStemPillarBlock;
import net.lyivx.lschiseld.block.CrimsonStemNailedBlock;
import net.lyivx.lschiseld.block.CrimsonStemBundleBlock;
import net.lyivx.lschiseld.block.CherryLogReinforcedBlock;
import net.lyivx.lschiseld.block.CherryLogPillarConnectingBlock;
import net.lyivx.lschiseld.block.CherryLogPillarBlock;
import net.lyivx.lschiseld.block.CherryLogNailedBlock;
import net.lyivx.lschiseld.block.CherryLogBundleBlock;
import net.lyivx.lschiseld.block.CherryLeavesSemiFrostedBlock;
import net.lyivx.lschiseld.block.CherryLeavesPoppyBlock;
import net.lyivx.lschiseld.block.CherryLeavesFrostedBlock;
import net.lyivx.lschiseld.block.CherryLeavesDandilionBlock;
import net.lyivx.lschiseld.block.CherryLeavesBlueOrchidBlock;
import net.lyivx.lschiseld.block.BirchLogReinforcedBlock;
import net.lyivx.lschiseld.block.BirchLogPillarConnectingBlock;
import net.lyivx.lschiseld.block.BirchLogPillarBlock;
import net.lyivx.lschiseld.block.BirchLogNailedBlock;
import net.lyivx.lschiseld.block.BirchLogBundleBlock;
import net.lyivx.lschiseld.block.BirchLeavesSemiFrostedBlock;
import net.lyivx.lschiseld.block.BirchLeavesPoppyBlock;
import net.lyivx.lschiseld.block.BirchLeavesFrostedBlock;
import net.lyivx.lschiseld.block.BirchLeavesDandilionBlock;
import net.lyivx.lschiseld.block.BirchLeavesBlueOrchidBlock;
import net.lyivx.lschiseld.block.BambooBlockReinforcedBlock;
import net.lyivx.lschiseld.block.BambooBlockPillarConnectingBlock;
import net.lyivx.lschiseld.block.BambooBlockPillarBlock;
import net.lyivx.lschiseld.block.BambooBlockNailedBlock;
import net.lyivx.lschiseld.block.AcaciaLogReinforcedBlock;
import net.lyivx.lschiseld.block.AcaciaLogPillarConnectingBlock;
import net.lyivx.lschiseld.block.AcaciaLogPillarBlock;
import net.lyivx.lschiseld.block.AcaciaLogNailedBlock;
import net.lyivx.lschiseld.block.AcaciaLogBundleBlock;
import net.lyivx.lschiseld.block.AcaciaLeavesSemiFrostedBlock;
import net.lyivx.lschiseld.block.AcaciaLeavesPoppyBlock;
import net.lyivx.lschiseld.block.AcaciaLeavesFrostedBlock;
import net.lyivx.lschiseld.block.AcaciaLeavesDandilionBlock;
import net.lyivx.lschiseld.block.AcaciaLeavesBlueOrchidBlock;
import net.lyivx.lschiseld.LsChiseldMod;

public class LsChiseldModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, LsChiseldMod.MODID);
	public static final RegistryObject<Block> OAK_LOG_BUNDLE = REGISTRY.register("oak_log_bundle", () -> new OakLogBundleBlock());
	public static final RegistryObject<Block> SPRUCE_LOG_BUNDLE = REGISTRY.register("spruce_log_bundle", () -> new SpruceLogBundleBlock());
	public static final RegistryObject<Block> BIRCH_LOG_BUNDLE = REGISTRY.register("birch_log_bundle", () -> new BirchLogBundleBlock());
	public static final RegistryObject<Block> JUNGLE_LOG_BUNDLE = REGISTRY.register("jungle_log_bundle", () -> new JungleLogBundleBlock());
	public static final RegistryObject<Block> ACACIA_LOG_BUNDLE = REGISTRY.register("acacia_log_bundle", () -> new AcaciaLogBundleBlock());
	public static final RegistryObject<Block> DARK_OAK_LOG_BUNDLE = REGISTRY.register("dark_oak_log_bundle", () -> new DarkOakLogBundleBlock());
	public static final RegistryObject<Block> MANGROVE_LOG_BUNDLE = REGISTRY.register("mangrove_log_bundle", () -> new MangroveLogBundleBlock());
	public static final RegistryObject<Block> CHERRY_LOG_BUNDLE = REGISTRY.register("cherry_log_bundle", () -> new CherryLogBundleBlock());
	public static final RegistryObject<Block> CRIMSON_STEM_BUNDLE = REGISTRY.register("crimson_stem_bundle", () -> new CrimsonStemBundleBlock());
	public static final RegistryObject<Block> WARPED_STEM_BUNDLE = REGISTRY.register("warped_stem_bundle", () -> new WarpedStemBundleBlock());
	public static final RegistryObject<Block> OAK_LOG_PILLAR = REGISTRY.register("oak_log_pillar", () -> new OakLogPillarBlock());
	public static final RegistryObject<Block> SPRUCE_LOG_PILLAR = REGISTRY.register("spruce_log_pillar", () -> new SpruceLogPillarBlock());
	public static final RegistryObject<Block> BIRCH_LOG_PILLAR = REGISTRY.register("birch_log_pillar", () -> new BirchLogPillarBlock());
	public static final RegistryObject<Block> JUNGLE_LOG_PILLAR = REGISTRY.register("jungle_log_pillar", () -> new JungleLogPillarBlock());
	public static final RegistryObject<Block> ACACIA_LOG_PILLAR = REGISTRY.register("acacia_log_pillar", () -> new AcaciaLogPillarBlock());
	public static final RegistryObject<Block> DARK_OAK_LOG_PILLAR = REGISTRY.register("dark_oak_log_pillar", () -> new DarkOakLogPillarBlock());
	public static final RegistryObject<Block> MANGROVE_LOG_PILLAR = REGISTRY.register("mangrove_log_pillar", () -> new MangroveLogPillarBlock());
	public static final RegistryObject<Block> CHERRY_LOG_PILLAR = REGISTRY.register("cherry_log_pillar", () -> new CherryLogPillarBlock());
	public static final RegistryObject<Block> OAK_LOG_PILLAR_CONNECTING = REGISTRY.register("oak_log_pillar_connecting", () -> new OakLogPillarConnectingBlock());
	public static final RegistryObject<Block> SPRUCE_LOG_PILLAR_CONNECTING = REGISTRY.register("spruce_log_pillar_connecting", () -> new SpruceLogPillarConnectingBlock());
	public static final RegistryObject<Block> BIRCH_LOG_PILLAR_CONNECTING = REGISTRY.register("birch_log_pillar_connecting", () -> new BirchLogPillarConnectingBlock());
	public static final RegistryObject<Block> JUNGLE_LOG_PILLAR_CONNECTING = REGISTRY.register("jungle_log_pillar_connecting", () -> new JungleLogPillarConnectingBlock());
	public static final RegistryObject<Block> ACACIA_LOG_PILLAR_CONNECTING = REGISTRY.register("acacia_log_pillar_connecting", () -> new AcaciaLogPillarConnectingBlock());
	public static final RegistryObject<Block> DARK_OAK_LOG_PILLAR_CONNECTING = REGISTRY.register("dark_oak_log_pillar_connecting", () -> new DarkOakLogPillarConnectingBlock());
	public static final RegistryObject<Block> MANGROVE_LOG_PILLAR_CONNECTING = REGISTRY.register("mangrove_log_pillar_connecting", () -> new MangroveLogPillarConnectingBlock());
	public static final RegistryObject<Block> CHERRY_LOG_PILLAR_CONNECTING = REGISTRY.register("cherry_log_pillar_connecting", () -> new CherryLogPillarConnectingBlock());
	public static final RegistryObject<Block> OAK_LOG_NAILED = REGISTRY.register("oak_log_nailed", () -> new OakLogNailedBlock());
	public static final RegistryObject<Block> SPRUCE_LOG_NAILED = REGISTRY.register("spruce_log_nailed", () -> new SpruceLogNailedBlock());
	public static final RegistryObject<Block> BIRCH_LOG_NAILED = REGISTRY.register("birch_log_nailed", () -> new BirchLogNailedBlock());
	public static final RegistryObject<Block> JUNGLE_LOG_NAILED = REGISTRY.register("jungle_log_nailed", () -> new JungleLogNailedBlock());
	public static final RegistryObject<Block> ACACIA_LOG_NAILED = REGISTRY.register("acacia_log_nailed", () -> new AcaciaLogNailedBlock());
	public static final RegistryObject<Block> DARK_OAK_LOG_NAILED = REGISTRY.register("dark_oak_log_nailed", () -> new DarkOakLogNailedBlock());
	public static final RegistryObject<Block> MANGROVE_LOG_NAILED = REGISTRY.register("mangrove_log_nailed", () -> new MangroveLogNailedBlock());
	public static final RegistryObject<Block> CHERRY_LOG_NAILED = REGISTRY.register("cherry_log_nailed", () -> new CherryLogNailedBlock());
	public static final RegistryObject<Block> OAK_LEAVES_POPPY = REGISTRY.register("oak_leaves_poppy", () -> new OakLeavesPoppyBlock());
	public static final RegistryObject<Block> OAK_LEAVES_DANDILION = REGISTRY.register("oak_leaves_dandilion", () -> new OakLeavesDandilionBlock());
	public static final RegistryObject<Block> OAK_LEAVES_BLUE_ORCHID = REGISTRY.register("oak_leaves_blue_orchid", () -> new OakLeavesBlueOrchidBlock());
	public static final RegistryObject<Block> OAK_LEAVES_SEMI_FROSTED = REGISTRY.register("oak_leaves_semi_frosted", () -> new OakLeavesSemiFrostedBlock());
	public static final RegistryObject<Block> OAK_LEAVES_FROSTED = REGISTRY.register("oak_leaves_frosted", () -> new OakLeavesFrostedBlock());
	public static final RegistryObject<Block> SPRUCE_LEAVES_POPPY = REGISTRY.register("spruce_leaves_poppy", () -> new SpruceLeavesPoppyBlock());
	public static final RegistryObject<Block> SPRUCE_LEAVES_DANDILION = REGISTRY.register("spruce_leaves_dandilion", () -> new SpruceLeavesDandilionBlock());
	public static final RegistryObject<Block> SPRUCE_LEAVES_BLUE_ORCHID = REGISTRY.register("spruce_leaves_blue_orchid", () -> new SpruceLeavesBlueOrchidBlock());
	public static final RegistryObject<Block> SPRUCE_LEAVES_SEMI_FROSTED = REGISTRY.register("spruce_leaves_semi_frosted", () -> new SpruceLeavesSemiFrostedBlock());
	public static final RegistryObject<Block> SPRUCE_LEAVES_FROSTED = REGISTRY.register("spruce_leaves_frosted", () -> new SpruceLeavesFrostedBlock());
	public static final RegistryObject<Block> BIRCH_LEAVES_POPPY = REGISTRY.register("birch_leaves_poppy", () -> new BirchLeavesPoppyBlock());
	public static final RegistryObject<Block> BIRCH_LEAVES_DANDILION = REGISTRY.register("birch_leaves_dandilion", () -> new BirchLeavesDandilionBlock());
	public static final RegistryObject<Block> BIRCH_LEAVES_BLUE_ORCHID = REGISTRY.register("birch_leaves_blue_orchid", () -> new BirchLeavesBlueOrchidBlock());
	public static final RegistryObject<Block> BIRCH_LEAVES_SEMI_FROSTED = REGISTRY.register("birch_leaves_semi_frosted", () -> new BirchLeavesSemiFrostedBlock());
	public static final RegistryObject<Block> BIRCH_LEAVES_FROSTED = REGISTRY.register("birch_leaves_frosted", () -> new BirchLeavesFrostedBlock());
	public static final RegistryObject<Block> JUNGLE_LEAVES_POPPY = REGISTRY.register("jungle_leaves_poppy", () -> new JungleLeavesPoppyBlock());
	public static final RegistryObject<Block> JUNGLE_LEAVES_DANDILION = REGISTRY.register("jungle_leaves_dandilion", () -> new JungleLeavesDandilionBlock());
	public static final RegistryObject<Block> JUNGLE_LEAVES_BLUE_ORCHID = REGISTRY.register("jungle_leaves_blue_orchid", () -> new JungleLeavesBlueOrchidBlock());
	public static final RegistryObject<Block> JUNGLE_LEAVES_SEMI_FROSTED = REGISTRY.register("jungle_leaves_semi_frosted", () -> new JungleLeavesSemiFrostedBlock());
	public static final RegistryObject<Block> JUNGLE_LEAVES_FROSTED = REGISTRY.register("jungle_leaves_frosted", () -> new JungleLeavesFrostedBlock());
	public static final RegistryObject<Block> ACACIA_LEAVES_POPPY = REGISTRY.register("acacia_leaves_poppy", () -> new AcaciaLeavesPoppyBlock());
	public static final RegistryObject<Block> ACACIA_LEAVES_DANDILION = REGISTRY.register("acacia_leaves_dandilion", () -> new AcaciaLeavesDandilionBlock());
	public static final RegistryObject<Block> ACACIA_LEAVES_BLUE_ORCHID = REGISTRY.register("acacia_leaves_blue_orchid", () -> new AcaciaLeavesBlueOrchidBlock());
	public static final RegistryObject<Block> ACACIA_LEAVES_SEMI_FROSTED = REGISTRY.register("acacia_leaves_semi_frosted", () -> new AcaciaLeavesSemiFrostedBlock());
	public static final RegistryObject<Block> ACACIA_LEAVES_FROSTED = REGISTRY.register("acacia_leaves_frosted", () -> new AcaciaLeavesFrostedBlock());
	public static final RegistryObject<Block> DARK_OAK_LEAVES_POPPY = REGISTRY.register("dark_oak_leaves_poppy", () -> new DarkOakLeavesPoppyBlock());
	public static final RegistryObject<Block> DARK_OAK_LEAVES_DANDILION = REGISTRY.register("dark_oak_leaves_dandilion", () -> new DarkOakLeavesDandilionBlock());
	public static final RegistryObject<Block> DARK_OAK_LEAVES_BLUE_ORCHID = REGISTRY.register("dark_oak_leaves_blue_orchid", () -> new DarkOakLeavesBlueOrchidBlock());
	public static final RegistryObject<Block> DARK_OAK_LEAVES_SEMI_FROSTED = REGISTRY.register("dark_oak_leaves_semi_frosted", () -> new DarkOakLeavesSemiFrostedBlock());
	public static final RegistryObject<Block> DARK_OAK_LEAVES_FROSTED = REGISTRY.register("dark_oak_leaves_frosted", () -> new DarkOakLeavesFrostedBlock());
	public static final RegistryObject<Block> MANGROVE_LEAVES_POPPY = REGISTRY.register("mangrove_leaves_poppy", () -> new MangroveLeavesPoppyBlock());
	public static final RegistryObject<Block> MANGROVE_LEAVES_DANDILION = REGISTRY.register("mangrove_leaves_dandilion", () -> new MangroveLeavesDandilionBlock());
	public static final RegistryObject<Block> MANGROVE_LEAVES_BLUE_ORCHID = REGISTRY.register("mangrove_leaves_blue_orchid", () -> new MangroveLeavesBlueOrchidBlock());
	public static final RegistryObject<Block> MANGROVE_LEAVES_SEMI_FROSTED = REGISTRY.register("mangrove_leaves_semi_frosted", () -> new MangroveLeavesSemiFrostedBlock());
	public static final RegistryObject<Block> MANGROVE_LEAVES_FROSTED = REGISTRY.register("mangrove_leaves_frosted", () -> new MangroveLeavesFrostedBlock());
	public static final RegistryObject<Block> CHERRY_LEAVES_POPPY = REGISTRY.register("cherry_leaves_poppy", () -> new CherryLeavesPoppyBlock());
	public static final RegistryObject<Block> CHERRY_LEAVES_DANDILION = REGISTRY.register("cherry_leaves_dandilion", () -> new CherryLeavesDandilionBlock());
	public static final RegistryObject<Block> CHERRY_LEAVES_BLUE_ORCHID = REGISTRY.register("cherry_leaves_blue_orchid", () -> new CherryLeavesBlueOrchidBlock());
	public static final RegistryObject<Block> CHERRY_LEAVES_SEMI_FROSTED = REGISTRY.register("cherry_leaves_semi_frosted", () -> new CherryLeavesSemiFrostedBlock());
	public static final RegistryObject<Block> CHERRY_LEAVES_FROSTED = REGISTRY.register("cherry_leaves_frosted", () -> new CherryLeavesFrostedBlock());
	public static final RegistryObject<Block> OAK_LOG_REINFORCED = REGISTRY.register("oak_log_reinforced", () -> new OakLogReinforcedBlock());
	public static final RegistryObject<Block> SPRUCE_LOG_REINFORCED = REGISTRY.register("spruce_log_reinforced", () -> new SpruceLogReinforcedBlock());
	public static final RegistryObject<Block> BIRCH_LOG_REINFORCED = REGISTRY.register("birch_log_reinforced", () -> new BirchLogReinforcedBlock());
	public static final RegistryObject<Block> JUNGLE_LOG_REINFORCED = REGISTRY.register("jungle_log_reinforced", () -> new JungleLogReinforcedBlock());
	public static final RegistryObject<Block> ACACIA_LOG_REINFORCED = REGISTRY.register("acacia_log_reinforced", () -> new AcaciaLogReinforcedBlock());
	public static final RegistryObject<Block> DARK_OAK_LOG_REINFORCED = REGISTRY.register("dark_oak_log_reinforced", () -> new DarkOakLogReinforcedBlock());
	public static final RegistryObject<Block> MANGROVE_LOG_REINFORCED = REGISTRY.register("mangrove_log_reinforced", () -> new MangroveLogReinforcedBlock());
	public static final RegistryObject<Block> CHERRY_LOG_REINFORCED = REGISTRY.register("cherry_log_reinforced", () -> new CherryLogReinforcedBlock());
	public static final RegistryObject<Block> BAMBOO_BLOCK_REINFORCED = REGISTRY.register("bamboo_block_reinforced", () -> new BambooBlockReinforcedBlock());
	public static final RegistryObject<Block> CRIMSON_STEM_REINFORCED = REGISTRY.register("crimson_stem_reinforced", () -> new CrimsonStemReinforcedBlock());
	public static final RegistryObject<Block> WARPED_STEM_REINFORCED = REGISTRY.register("warped_stem_reinforced", () -> new WarpedStemReinforcedBlock());
	public static final RegistryObject<Block> BAMBOO_BLOCK_PILLAR = REGISTRY.register("bamboo_block_pillar", () -> new BambooBlockPillarBlock());
	public static final RegistryObject<Block> CRIMSON_STEM_PILLAR = REGISTRY.register("crimson_stem_pillar", () -> new CrimsonStemPillarBlock());
	public static final RegistryObject<Block> WARPED_STEM_PILLAR = REGISTRY.register("warped_stem_pillar", () -> new WarpedStemPillarBlock());
	public static final RegistryObject<Block> BAMBOO_BLOCK_PILLAR_CONNECTING = REGISTRY.register("bamboo_block_pillar_connecting", () -> new BambooBlockPillarConnectingBlock());
	public static final RegistryObject<Block> CRIMSON_STEM_PILLAR_CONNECTING = REGISTRY.register("crimson_stem_pillar_connecting", () -> new CrimsonStemPillarConnectingBlock());
	public static final RegistryObject<Block> WARPED_STEM_PILLAR_CONNECTING = REGISTRY.register("warped_stem_pillar_connecting", () -> new WarpedStemPillarConnectingBlock());
	public static final RegistryObject<Block> BAMBOO_BLOCK_NAILED = REGISTRY.register("bamboo_block_nailed", () -> new BambooBlockNailedBlock());
	public static final RegistryObject<Block> CRIMSON_STEM_NAILED = REGISTRY.register("crimson_stem_nailed", () -> new CrimsonStemNailedBlock());
	public static final RegistryObject<Block> WARPED_STEM_NAILED = REGISTRY.register("warped_stem_nailed", () -> new WarpedStemNailedBlock());

	@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
	public static class ClientSideHandler {
		@SubscribeEvent
		public static void blockColorLoad(RegisterColorHandlersEvent.Block event) {
			OakLeavesPoppyBlock.blockColorLoad(event);
			OakLeavesDandilionBlock.blockColorLoad(event);
			OakLeavesBlueOrchidBlock.blockColorLoad(event);
			OakLeavesSemiFrostedBlock.blockColorLoad(event);
			SpruceLeavesPoppyBlock.blockColorLoad(event);
			SpruceLeavesDandilionBlock.blockColorLoad(event);
			SpruceLeavesBlueOrchidBlock.blockColorLoad(event);
			SpruceLeavesSemiFrostedBlock.blockColorLoad(event);
			BirchLeavesPoppyBlock.blockColorLoad(event);
			BirchLeavesDandilionBlock.blockColorLoad(event);
			BirchLeavesBlueOrchidBlock.blockColorLoad(event);
			BirchLeavesSemiFrostedBlock.blockColorLoad(event);
			JungleLeavesPoppyBlock.blockColorLoad(event);
			JungleLeavesDandilionBlock.blockColorLoad(event);
			JungleLeavesBlueOrchidBlock.blockColorLoad(event);
			JungleLeavesSemiFrostedBlock.blockColorLoad(event);
			AcaciaLeavesPoppyBlock.blockColorLoad(event);
			AcaciaLeavesDandilionBlock.blockColorLoad(event);
			AcaciaLeavesBlueOrchidBlock.blockColorLoad(event);
			AcaciaLeavesSemiFrostedBlock.blockColorLoad(event);
			DarkOakLeavesPoppyBlock.blockColorLoad(event);
			DarkOakLeavesDandilionBlock.blockColorLoad(event);
			DarkOakLeavesBlueOrchidBlock.blockColorLoad(event);
			DarkOakLeavesSemiFrostedBlock.blockColorLoad(event);
			MangroveLeavesPoppyBlock.blockColorLoad(event);
			MangroveLeavesDandilionBlock.blockColorLoad(event);
			MangroveLeavesBlueOrchidBlock.blockColorLoad(event);
			MangroveLeavesSemiFrostedBlock.blockColorLoad(event);
		}

		@SubscribeEvent
		public static void itemColorLoad(RegisterColorHandlersEvent.Item event) {
			OakLeavesPoppyBlock.itemColorLoad(event);
			OakLeavesDandilionBlock.itemColorLoad(event);
			OakLeavesBlueOrchidBlock.itemColorLoad(event);
			OakLeavesSemiFrostedBlock.itemColorLoad(event);
			SpruceLeavesPoppyBlock.itemColorLoad(event);
			SpruceLeavesDandilionBlock.itemColorLoad(event);
			SpruceLeavesBlueOrchidBlock.itemColorLoad(event);
			SpruceLeavesSemiFrostedBlock.itemColorLoad(event);
			BirchLeavesPoppyBlock.itemColorLoad(event);
			BirchLeavesDandilionBlock.itemColorLoad(event);
			BirchLeavesBlueOrchidBlock.itemColorLoad(event);
			BirchLeavesSemiFrostedBlock.itemColorLoad(event);
			JungleLeavesPoppyBlock.itemColorLoad(event);
			JungleLeavesDandilionBlock.itemColorLoad(event);
			JungleLeavesBlueOrchidBlock.itemColorLoad(event);
			JungleLeavesSemiFrostedBlock.itemColorLoad(event);
			AcaciaLeavesPoppyBlock.itemColorLoad(event);
			AcaciaLeavesDandilionBlock.itemColorLoad(event);
			AcaciaLeavesBlueOrchidBlock.itemColorLoad(event);
			AcaciaLeavesSemiFrostedBlock.itemColorLoad(event);
			DarkOakLeavesPoppyBlock.itemColorLoad(event);
			DarkOakLeavesDandilionBlock.itemColorLoad(event);
			DarkOakLeavesBlueOrchidBlock.itemColorLoad(event);
			DarkOakLeavesSemiFrostedBlock.itemColorLoad(event);
			MangroveLeavesPoppyBlock.itemColorLoad(event);
			MangroveLeavesDandilionBlock.itemColorLoad(event);
			MangroveLeavesBlueOrchidBlock.itemColorLoad(event);
			MangroveLeavesSemiFrostedBlock.itemColorLoad(event);
		}
	}
}
